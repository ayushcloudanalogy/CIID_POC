name: 'iOS Build'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      publish:
        required: false
        type: boolean
        description: Publish to Appcenter
    secrets:
      P12_BASE64:
        required: true
      MOBILEPROVISION_BASE64:
        required: true
      IOS_TEAM_ID:
        required: true
      CERTIFICATE_PASSWORD:
        required: true
      NPM_TOKEN:
        required: true
      APP_CENTER_TOKEN_IOS:
        required: true

jobs:
  build-ios:
    runs-on: macos-latest #Monterey
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install Node modules
        run: yarn install

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Bundle install for iOS Gemfile
        timeout-minutes: 5
        run: cd ./ios && gem install bundler:2.5.4 && bundle install
      # - name: Restore Pods cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ios/Pods
      #       ~/Library/Caches/CocoaPods
      #       ~/.cocoapods
      #     key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pods-

      # - name: Install pod dependencies
      #   run: cd ios && pod install && cd .

      # - name: Build iOS (Release)
      #   uses: yukiarrr/ios-build-action@v1.5.0
      #   with:
      #     project-path: ios/rncicd_poc.xcodeproj
      #     p12-base64: ${{ secrets.P12_BASE64 }}
      #     mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
      #     code-signing-identity: 'Apple Distribution'
      #     certificate-password: ${{ secrets.CERTIFICATE_PASSWORD }}
      #     team-id: ${{ secrets.IOS_TEAM_ID }}
      #     workspace-path: ios/rncicd_poc.xcworkspace
      #     output-path: android/app/release/release-ipa.ipa

      - name: Build and Deploy to TestFlight
        env:
          # MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          # MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_PAT_TOKEN }}
          ASC_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
          ASC_KEY_P8: ${{ secrets.APPLE_KEY_CONTENT }}
        run: |
          cd ./ios
          bundle exec fastlane beta

      # - run: mkdir -p staging

      # - name: collect ipa artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: release-ipa
      #     # Path to the release files
      #     path: android/app/release/*.ipa

      # - name: List Files
      #   run: ls -R

  # publish-to-appcenter:
  #   runs-on: ubuntu-latest
  #   needs: build-ios
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Get release-ipa from artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: release-ipa

  #     - name: List Files
  #       run: ls -R
  #     # - name: Download artifact
  #     #   uses: actions/download-artifact@v3
  #     #   with:
  #     #     name: FinderUK
  #     #     path: 'test/FinderUK.ipa'

  #     - name: Upload artifact to App Center
  #       uses: wzieba/AppCenter-Github-Action@v1
  #       with:
  #         appName: ayush.jain-cloudanalogy.com/CICD_POC_IOS
  #         token: ${{secrets.APP_CENTER_TOKEN_IOS}}
  #         group: Test
  #         file: release-ipa.ipa
  #         # notifyTesters: true
  #         debug: false
